{"version":3,"sources":["images/Flag.jpg","logo.svg","components/Loading.js","pages/SingleCountry.js","pages/Error.js","context.js","components/CountryList.js","pages/Home.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","styled","div","glimmer","keyframes","skeletonShimmer","css","rgba","SingleCountry","props","width","height","margin","name","useParams","React","useState","details","setdetails","console","log","detailedCountries","a","fetch","data","json","response","useEffect","to","length","map","country","population","flag","nativeName","region","subregion","capital","topLevelDomain","currencies","languages","borders","key","src","Error","AppContext","createContext","url","AppProvider","children","isDarkMode","setIsDarkMode","countries","setCountries","setOriginal","searchTerm","setSearchTerm","regionInput","setRegionInput","loading","searchInput","useRef","fetchCountries","searchCountries","regionFilter","Provider","value","useGlobalContext","useContext","CountryList","className","alt","Home","ref","type","placeholder","onChange","current","e","target","index","Navbar","onClick","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e31b90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Flag.b6680ee2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9a3d2645.svg\";","import React, { useState, useEffect } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba } from 'polished';\n\nconst Loading = () => {\n  return (\n    <Card>\n      <Row>\n        <Skeleton width='40px' height='40px' />\n        <div style={{ marginLeft: '1rem' }}>\n          <Skeleton width='130px' margin='0 0 0.6rem' />\n          <Skeleton width='80px' />\n        </div>\n      </Row>\n    </Card>\n  );\n};\n\nexport default Loading;\n\nconst Card = styled.div`\n  border-radius: 0.5rem;\n  background: #f2edf7;\n  color: white;\n  width: 200px;\n  padding: 1.5rem;\n`;\nconst glimmer = keyframes`\n0%{\n    transform: rotate(10deg)\n    translate(-200%, -50%)\n}\n100%{\n    transform:rotate(10deg)\n    translate(200%, -50%)\n}\n`;\n\nconst skeletonShimmer = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100px;\n  height: 200px;\n  background: ${rgba('#190932', 0.05)};\n  animation: ${glimmer} 1.25s infinite linear;\n`;\nconst skeletonColor = '#e0daeb';\nconst borderRadius = '3px';\n\nconst Skeleton = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: ${(props) => props.width || '120px'};\n  height: ${(props) => props.height || '12px'};\n  margin: ${(props) => props.margin || 0};\n  border-radius: ${borderRadius};\n  background:${skeletonColor}\n\n  &::before{\n      ${skeletonShimmer}\n  }\n`;\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport Loading from '../components/Loading';\nimport { useParams, Link } from 'react-router-dom';\n\nconst SingleCountry = () => {\n  const url = 'https://restcountries.eu/rest/v2/name/';\n  const { name } = useParams();\n\n  const [details, setdetails] = React.useState('');\n  console.log(details);\n\n  const detailedCountries = async () => {\n    const data = await fetch(`${url}${name}`);\n    const response = await data.json();\n    setdetails(response);\n  };\n  React.useEffect(() => {\n    detailedCountries();\n  }, [name]);\n\n  return (\n    <div>\n      <button>\n        <Link to={'/'}>Return</Link>\n      </button>\n      <h2>{name}</h2>\n      {details.length > 0 &&\n        details.map((country) => {\n          const {\n            name,\n            population,\n            flag,\n            nativeName,\n            region,\n            subregion,\n            capital,\n            topLevelDomain,\n            currencies,\n            languages,\n            borders,\n          } = country;\n          return (\n            <article key={name}>\n              <img src={flag} />\n\n              <header>{name}</header>\n              <h1>\n                <strong>Native Name: </strong>\n                {nativeName}\n              </h1>\n              <h1>\n                <strong>Population: </strong>\n                {population}\n              </h1>\n              <h1>\n                <strong>Region: </strong>\n                {region}\n              </h1>\n              <h1>\n                <strong>Sub Region: </strong>\n                {subregion}\n              </h1>\n              <h1>\n                <strong>Capital: </strong>\n                {capital}\n              </h1>\n\n              <h1>\n                <strong>Top Level Domain: </strong>\n                {topLevelDomain}\n              </h1>\n              <h1>\n                <strong>Curriencies</strong>\n                {/* {currencies} */}\n              </h1>\n              <h1>\n                <strong>Languages</strong>\n                {/* {languages} */}\n              </h1>\n              <h1>\n                <strong>Border Countries</strong>\n                {/* {borders} */}\n              </h1>\n            </article>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default SingleCountry;\n","import React from 'react';\n// import { Link } from 'react-router-dom'\n\nconst Error = () => {\n  return (\n    <div>\n      <h2>error page</h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useCallback } from 'react';\n\nconst AppContext = React.createContext();\nconst url = 'https://restcountries.eu/rest/v2/all';\nconst searchUrl = 'https://restcountries.eu/rest/v2/name/';\nconst regionUrl = 'https://restcountries.eu/rest/v2/region/';\n\nconst AppProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [original, setOriginal] = useState('');\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [regionInput, setRegionInput] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const searchInput = useRef(null);\n\n  const fetchCountries = async () => {\n    const data = await fetch(url);\n    const response = await data.json();\n    setCountries(response);\n    setOriginal(response);\n  };\n\n  useEffect(() => {\n    const searchCountries = async () => {\n      if (searchTerm !== '') {\n        const data = await fetch(`${searchUrl}${searchTerm}`);\n        const response = await data.json();\n        setCountries(response);\n      } else {\n        const data = await fetch(url);\n        const response = await data.json();\n        setCountries(response);\n      }\n    };\n    searchCountries();\n  }, [searchTerm]);\n\n  useEffect(() => {\n    const regionFilter = async () => {\n      if (regionInput === '' || regionInput === null) {\n        const data = await fetch(url);\n        const response = await data.json();\n        setCountries(response);\n      } else if (regionInput !== '') {\n        const data = await fetch(`${regionUrl}${regionInput}`);\n        const response = await data.json();\n        setCountries(response);\n      }\n    };\n    regionFilter();\n  }, [regionInput]);\n\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        setCountries,\n        countries,\n        isDarkMode,\n        setIsDarkMode,\n        searchInput,\n        setSearchTerm,\n        // setSearchInput,\n        regionInput,\n        setRegionInput,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React, { useEffect } from 'react';\n// import Country from './Country';\n// import Loading from './Loading';\nimport { Link } from 'react-router-dom';\nimport { useGlobalContext } from '../context';\n\nconst CountryList = ({ name, population, capital, region, flag }) => {\n  const { isDarkMode, searchInput, setCountries } = useGlobalContext();\n  return (\n    <div>\n      <div\n        className={`${isDarkMode ? 'single-country dark' : 'single-country'}`}\n      >\n        <button>\n          <Link to={`/country/${name}`}>More details</Link>\n        </button>\n        <picture>\n          <img src={flag} alt='' />\n        </picture>\n        <div className='info'>\n          <h3>{name}</h3>\n          <p>\n            <strong>Population:</strong> {population}\n          </p>\n          <p>\n            <strong>Region:</strong> {region}\n          </p>\n          <p>\n            <strong>Capital:</strong> {capital}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import React, { useState } from 'react';\nimport { useGlobalContext } from '../context';\nimport CountryList from '../components/CountryList';\n\nimport Flag from '../images/Flag.jpg';\nconst Home = () => {\n  const {\n    isDarkMode,\n    countries,\n    searchInput,\n    setSearchTerm,\n    regionInput,\n    setRegionInput,\n    // setSearchInput,\n  } = useGlobalContext();\n\n  console.log(regionInput);\n  return (\n    <div className={`${isDarkMode ? 'hero-container dark' : 'hero-container'}`}>\n      <div className='hero-top'>\n        <div>\n          <span>searchbtn</span>\n          <input\n            ref={searchInput}\n            className='input'\n            type='search'\n            placeholder='Search for a country...'\n            name=''\n            // value={searchInput}\n            onChange={() => setSearchTerm(searchInput.current.value)}\n          />\n        </div>\n        <select\n          className={`${isDarkMode ? 'select dark' : 'select'}`}\n          name=''\n          placeholder='Filter by Region'\n          onChange={(e) => setRegionInput(e.target.value)}\n        >\n          <option value=''>Filter by Region</option>\n          <option value='africa'>Africa</option>\n          <option value='americas'>America</option>\n          <option value='asia'>Asia</option>\n          <option value='europe'>Europe</option>\n          <option value='oceania'>Oceania</option>\n        </select>\n      </div>\n\n      <div className='country-container'>\n        {countries.map((country, index) => {\n          return <CountryList key={index} {...country} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useGlobalContext } from '../context';\n// import { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\n\nconst Navbar = () => {\n  const { isDarkMode, setIsDarkMode } = useGlobalContext();\n  const handleToggle = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <div className={`${isDarkMode ? 'nav-container dark' : 'nav-container'}`}>\n      {/* <div className='nav-container'> */}\n      <div>\n        <p>\n          <strong>Where in the world?</strong>\n        </p>\n      </div>\n      <div>\n        <button onClick={handleToggle}>Toggle Mode</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import pages\nimport About from './pages/About';\nimport SingleCountry from './pages/SingleCountry';\nimport Error from './pages/Error';\nimport Home from './pages/Home';\n// import components\nimport Navbar from './components/Navbar';\nimport Loading from './components/Loading';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Navbar />\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n\n          <Route path='/country/:name'>\n            <SingleCountry />\n          </Route>\n          <Route path='*'>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}